version: '3'
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    image: server:latest
    ports:
      - "5001:5001"
    depends_on:
      - produits_db
    environment:
      DATABASE_URL: "postgresql://gven:gven@produits_db/produits"
    networks:
      - vpcbr
    command:
      ["sh","-c","sleep 5 && gunicorn -w 4 -b 0.0.0.0:5001 wsgi:app "]

  client:
    build:
      context: ./client
    image: client:latest
    ports:
      - "80:80"
    networks:
      - vpcbr
    depends_on:
      - "server"

  produits_db: 
    image: postgres:14.1-alpine
    container_name: produits_db-container
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${PRODUITS_DB}
    ports:
      - '5432:5432'
    networks:
      - vpcbr
    volumes:
      - produits_data:/var/lib/postgresql/data

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: "False"
  #     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - vpcbr
  #   volumes:
  #     - ./conf/servers.json:/pgadmin4/servers.json
  #     - ./conf/pgpass:/pgadmin4/pgpass
  #   depends_on:
  #     - "produits_db"
  #   entrypoint: >
  #     /bin/sh -c " cp -f /pgadmin4/pgpass /var/lib/pgadmin/; chmod 600 /var/lib/pgadmin/pgpass; /entrypoint.sh "

networks:
  vpcbr:
    driver: bridge

volumes:
  produits_data:


